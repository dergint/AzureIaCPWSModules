# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow that checks for security issues using
# the Prisma Cloud Infrastructure as Code Scan Action on
# the IaC files present in the repository.
# The results are uploaded to GitHub Security Code Scanning
#
# For more details on the Action configuration see https://github.com/prisma-cloud-shiftleft/iac-scan-action

name: Prisma Cloud IaC Scan

on:
  push:
     branches:
      - main
      - dev
      - 'feature/*'  # Any branch starting with "feature/" 
  pull_request:
    # The branches below must be a subset of the branches above
    branches:
    - main
    - dev
    - 'feature/*'
  schedule:
    - cron: '16 19 * * 0'

permissions:
  contents: read

jobs:
  prisma_cloud_iac_scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    name: Run Prisma Cloud IaC Scan to check
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Run Prisma Cloud 
        id: prisma-cloud
        uses: bridgecrewio/checkov-action@master
        env:
          PRISMA_API_URL: https://api.eu.prismacloud.io
        with:
          api-key: ${{ secrets.BC_API_KEY }}
  
    #  - name: Upload SARIF file
    #    uses: github/codeql-action/upload-sarif@v3
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed.
        # And alternative it to add `continue-on-error: true` to the previous step
     #   if: success() || failure()
      #  with:
          # The SARIF Log file name is configurable on scan action
          # therefore the file name is best read from the steps output
      #    sarif_file: results.sarif
          #sarif_file: ${{ steps.prisma-cloud.outputs.prisma-cloud_result_sarif_path }}
